import discord
from discord.ext import commands
from flask import Flask, request, jsonify
import threading

# ‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏≠‡∏ô‡∏ü‡∏¥‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Discord
DISCORD_TOKEN = 'TOKEN'  # ‡πÉ‡∏™‡πà Token ‡∏Ç‡∏≠‡∏á Discord Bot ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà

# ‡∏™‡∏£‡πâ‡∏≤‡∏á Flask App ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å ESP32
app = Flask(__name__)

temperature = None
humidity = None

@app.route('/update', methods=['POST'])
def update_sensor_data():
    global temperature, humidity
    try:
        data = request.json
        temperature = data.get('temp')
        humidity = data.get('humid')
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö
        print(f"Received temperature: {temperature}")
        print(f"Received humidity: {humidity}")
        if temperature is None or humidity is None:
            return jsonify({'status': 'error', 'message': 'Invalid data format'}), 400
        return jsonify({'status': 'success'})
    except Exception as e:
        print(f"Error: {e}")
        return jsonify({'status': 'error', 'message': 'Failed to process data'}), 500

# ‡∏™‡∏£‡πâ‡∏≤‡∏á Discord Bot
intents = discord.Intents.default()
intents.message_content = True  # ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Intent ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
bot = commands.Bot(command_prefix='$', intents=intents)

@bot.command()
async def temp(ctx):
    if temperature is not None:
        try:
            temperature_float = float(temperature)
            temperature_formatted = f"{temperature_float:.1f}"
            await ctx.send(f"Current temperature: {temperature_formatted}¬∞C üå°Ô∏è")
        except ValueError:
            await ctx.send("Invalid temperature value.")
    else:
        await ctx.send("No temperature data available.")

@bot.command()
async def humid(ctx):
    if humidity is not None:
        # ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏∑‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏ï‡πá‡∏°
        humidity_int = round(humidity)
        await ctx.send(f"Current humidity: {humidity_int}% üíß")
    else:
        await ctx.send("No humidity data available.")

if __name__ == '__main__':
    # ‡πÄ‡∏£‡∏¥‡πà‡∏° Flask server ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å ESP32
    def run_flask():
        app.run(host='0.0.0.0', port=5000)

    threading.Thread(target=run_flask).start()

    # ‡πÄ‡∏£‡∏¥‡πà‡∏° Discord bot
    bot.run(DISCORD_TOKEN)
